name: Generate Pdf and Release

# refer to https://github.com/actions/starter-workflows/blob/main/ci/docker-publish.yml 

on:
  # Trigger the workflow on push or pull request,
  # but only for the master branch
  push:
    branches:
      - master
    paths-ignore:
      - '**.html'
      - 'static/**'
      - 'no_used/**'

env:
  CACHE_FROM_DIR: /tmp/.buildx-cache
  DOCKER_BUILDKIT: 1


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Init
        run: |
          mkdir -p output
          sudo apt update
          sudo apt install -y \
            libatk-bridge2.0-0t64 \
            libatk1.0-0t64 \
            libcups2t64 \
            libdrm2 \
            libxcomposite1 \
            libxdamage1 \
            libxrandr2 \
            libgbm1 \
            libasound2t64 \
            libpangocairo-1.0-0 \
            libpango-1.0-0 \
            libxss1 \
            libgtk-3-0t64 \
            libnss3 \
            libxshmfence1 \
            libx11-xcb1 \
            libxext6 \
            libxcb1 \
            ca-certificates \
            fonts-noto-cjk \
            fonts-wqy-zenhei \
            fonts-wqy-microhei
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 10
          run_install: false

      # 手动配置缓存：包括 .pnpm-store 和 node_modules（可选）
      - name: Restore pnpm store cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.pnpm-store
            node_modules
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install
        env:
          PNPM_HOME: ~/.pnpm-store    
      - name: Build And Gen Pdf
        working-directory: ./
        run: |
          npm run pdf:cn
          mv output/book.pdf "output/${{ github.sha }}.pdf"
      - name: Generate release tag
        id: tag
        run: |
          echo "::set-output name=release_tag::UserBuild_$(date +"%Y.%m.%d_%H-%M")"
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.release_tag }}
          files: ./output/${{ github.sha }}.pdf
          draft: false
          prerelease: true